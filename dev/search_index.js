var documenterSearchIndex = {"docs":
[{"location":"#MarkovRandomFields","page":"Home","title":"MarkovRandomFields","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for MarkovRandomFields.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"#MarkovRandomFields.Factor","page":"Home","title":"MarkovRandomFields.Factor","text":"Factor\n\nAn abstract type representing a factor. It should implement the weight(::Factor, x) method to evaluate the factor for input x.\n\n\n\n\n\n","category":"type"},{"location":"#MarkovRandomFields.TabulatedFactor","page":"Home","title":"MarkovRandomFields.TabulatedFactor","text":"TabulatedFactor\n\nA type of Factor constructed by specifying the output to any input in a tabular fashion via an array values.\n\n\n\n\n\n","category":"type"},{"location":"#MarkovRandomFields.UniformFactor","page":"Home","title":"MarkovRandomFields.UniformFactor","text":"UniformFactor\n\nA type of Factor which returns the same value for any input: it behaves as if it wasn't even there.\n\n\n\n\n\n","category":"type"},{"location":"#MarkovRandomFields.Models.IsingCoupling","page":"Home","title":"MarkovRandomFields.Models.IsingCoupling","text":"IsingCoupling\n\nA type of Factor representing a factor in an Ising distribution. It involves pm 1 variables boldsymbolsigma_a=sigma_1 sigma_2 ldots. The factor evaluates to psi(boldsymbolsigma_a)=e^beta J prod_iin asigma_i. A particular case is the pairwise interaction where a=ij is a pair of vertices involved in an edge (ij).\n\nFields\n\nβJ: coupling strength.\n\n\n\n\n\n","category":"type"},{"location":"#MarkovRandomFields.Models.IsingField","page":"Home","title":"MarkovRandomFields.Models.IsingField","text":"IsingField\n\nA type of Factor representing a single-variable external field in an Ising distribution. The factor evaluates to psi(sigma_i)=e^beta h sigma_i.\n\nFields\n\nβh: field strength.\n\n\n\n\n\n","category":"type"},{"location":"#MarkovRandomFields.Models.KSATClause","page":"Home","title":"MarkovRandomFields.Models.KSATClause","text":"KSATClause\n\nA type of Factor representing a clause in a k-SAT formula. It involves 01 variables boldsymbolx_a=x_1 x_2 ldots x_k. The factor evaluates to psi_a(boldsymbolx_a)=1 - prod_iin adelta(x_i J^a_i).\n\nFields\n\nJ: a vector of booleans.\n\n\n\n\n\n","category":"type"},{"location":"#MarkovRandomFields.MCMC.GibbsSampler","page":"Home","title":"MarkovRandomFields.MCMC.GibbsSampler","text":"A Gibbs sampler\n\n\n\n\n\n","category":"type"},{"location":"#MarkovRandomFields.MCMC.MHSampler","page":"Home","title":"MarkovRandomFields.MCMC.MHSampler","text":"A Metropolis Hastings sampler\n\n\n\n\n\n","category":"type"},{"location":"#MarkovRandomFields.MCMC.sample_from_variable_biases-Tuple{Random.AbstractRNG, MarkovRandomField}","page":"Home","title":"MarkovRandomFields.MCMC.sample_from_variable_biases","text":"Sample a random configuration from the variables' priors\n\n\n\n\n\n","category":"method"},{"location":"#MarkovRandomFields.Test.exact_factor_marginals-Tuple{MarkovRandomField}","page":"Home","title":"MarkovRandomFields.Test.exact_factor_marginals","text":"exact_factor_marginals(model::MarkovRandomField; p_exact = exact_prob(model))\n\nExhaustively compute marginal distributions for each factor.\n\n\n\n\n\n","category":"method"},{"location":"#MarkovRandomFields.Test.exact_lognormalization-Tuple{MarkovRandomField}","page":"Home","title":"MarkovRandomFields.Test.exact_lognormalization","text":"exact_lognormalization(model::MarkovRandomField)\n\nExhaustively compute the natural logarithm of the normalization constant.\n\n\n\n\n\n","category":"method"},{"location":"#MarkovRandomFields.Test.exact_marginals-Tuple{MarkovRandomField}","page":"Home","title":"MarkovRandomFields.Test.exact_marginals","text":"exact_marginals(model::MarkovRandomField; p_exact = exact_prob(model))\n\nExhaustively compute marginal distributions for each variable.\n\n\n\n\n\n","category":"method"},{"location":"#MarkovRandomFields.Test.exact_prob-Tuple{MarkovRandomField}","page":"Home","title":"MarkovRandomFields.Test.exact_prob","text":"exact_prob(model::MarkovRandomField; logZ = exact_normalization(model))\n\nExhaustively compute the probability of each possible configuration of the variables.\n\n\n\n\n\n","category":"method"},{"location":"#MarkovRandomFields.Test.rand_factor-Tuple{Random.AbstractRNG, Any}","page":"Home","title":"MarkovRandomFields.Test.rand_factor","text":"rand_factor([rng,], nstates)\n\nReturn a random Factor whose domain is specified by the iterable nstates.\n\n\n\n\n\n","category":"method"},{"location":"#MarkovRandomFields.Test.rand_mrf-Tuple{Random.AbstractRNG, IndexedFactorGraphs.AbstractFactorGraph, Any}","page":"Home","title":"MarkovRandomFields.Test.rand_mrf","text":"rand_mrf([rng], g::AbstractFactorGraph, nstates; variable_biases)\n\nReturn a MarkovRandomField with random factors.\n\nnstates is an iterable containing the number of values that can be taken by each variable.\n\n\n\n\n\n","category":"method"}]
}
